{"version":3,"sources":["modules/ethers/EthersProvider.ts","modules/ethers/Utils.ts","modules/ethers/LockedTwin.ts","components/common/IconTooltip.tsx","modules/contexts/WalletContext.tsx","components/display/Countdown.tsx","components/layout/Footer.tsx","components/layout/Header.tsx","modules/ethers/LiquidityPool.ts","components/display/lp/LPCard.tsx","components/display/lp/LPTotalCard.tsx","components/display/lp/LPSection.tsx","components/display/mint/MintCard.tsx","modules/ethers/Loan.ts","components/display/mint/MintSection.tsx","components/display/PriceCard.tsx","modules/ethers/Stock.ts","components/display/stock/StockCard.tsx","components/display/stock/StockSection.tsx","modules/ethers/GovernanceToken.ts","components/common/PriceTitle.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["provider","ethers","providers","JsonRpcProvider","name","chainId","ROUTERS","twindex","address","abi","IPANCAKE_ROUTER02_ABI","TOKENS","TSLA","GOOGL","AMZN","AAPL","DOLLY","DOP","TWIN","PRICE_FEEDS","DFI_PROTOCOLS","DFI_PROTOCOLS_ABI","getTokenPriceWithDopPair","tokenAddress","dollyPrice","a","getPriceFromTwindexRouter","tokenPrice","getTokenPriceWithDollyPair","path","twindexRouter","Contract","functions","getAmountsOut","utils","parseEther","result","amountOut","amounts","length","mul","div","getOracleDollyPrice","oracle","latestAnswer","price","formatUsd","bigNumber","Intl","NumberFormat","style","currency","format","Number","formatEther","objectFlip","obj","ret","Object","keys","forEach","key","TWIN_ABI","getLockedTWINAmount","twin","lockOf","lockedAmount","amount","toFixed","twinPrice","valueInUsd","getCurrentBlockNumber","getBlockNumber","blockNumber","secondsUntilBlock","currentBlockNumber","targetBlockNumber","getUnlockDate","secondsUntil","Date","valueOf","IconTooltip","icon","placement","text","OverlayTrigger","overlay","Tooltip","id","className","WalletContext","createContext","WalletProvider","children","useState","setAddress","useEffect","URLSearchParams","window","location","search","get","handleManualAddressProvide","useCallback","href","handleWalletConnect","ethereum","request","method","accounts","account","alert","Provider","value","connectWallet","useWallet","useContext","UnitRender","unit","inline","noOverflow","fontWeight","CountdownRenderer","days","hours","minutes","seconds","completed","String","padStart","CountdownPlaceholder","Countdown","locked","setLocked","unlockDate","setUnlockDate","unlockDateString","useMemo","moment","Card","Body","Row","Col","md","lg","date","renderer","Footer","backgroundColor","minHeight","lineHeight","AddressForm","localAddress","setLocalAddress","handleSearch","Form","InputGroup","Control","placeholder","onChange","e","target","aria-label","size","Append","Button","variant","type","onClick","Header","Container","Navbar","expand","Brand","src","height","alt","letterSpacing","Toggle","aria-controls","Collapse","Nav","Link","rel","DOLLY_PAIRS","DOP_PAIRS","TWINDEX_POOLS","TWIN_DOP","TSLA_DOP","DOP_AAPL","AMZN_DOP","TSLA_DOLLY","AMZN_DOLLY","AAPL_DOLLY","GOOGL_DOLLY","DOP_GOOGL","FAIRLAUNCH","FAIRLAUNCH_ABI","getDollyLPs","Promise","all","entries","map","token","pairAddress","stockPrice","getReserves","totalStockReserve","totalDollyReserve","getTotalLpSupply","totalSupply","lpPrice","getLpPrice","getLpAmount","lpAmount","lpValue","getUnderlyingAssetsOfLps","stockAmount","dollyAmount","getPendingTwin","getPoolIdFromPairAddress","pendingTwin","unclaimedTwinValue","gt","token0Symbol","token1Symbol","token0Amount","parseFloat","token1Amount","unformattedLpValue","unclaimedTwin","undefined","LPs","filter","pair","getDopLPs","dopPrice","getTokenAddressesFromPair","token0","totalDopReserve","dopAmount","getTwinLP","fairLaunch","userInfo","twinAmount","pendingTwinValue","getLPs","dollyLPs","dopLPs","twinLP","combineLPs","push","totalValue","r","reduce","sum","add","totalPendingTwins","lps","total","twindexPair","IUNISWAPV2_PAIR_ABI","reserves","lpSupply","token0Price","token1Price","reserve0","reserve1","totalToken0Value","totalToken1Value","poolId","walletAddress","fairlaunch","balanceOf","lpAmountInWallet","lpAmountInPool","totalLpSupply","totalReserve0","totalReserve1","token1","LPCard","lp","poolImage","poolName","border","borderRadius","LPTotalCard","boxShadow","LPSection","setLPs","totalLP","setTotalLP","noStaked","setNoStaked","background","Spinner","animation","index","MintCard","position","maintenanceMargin","setMaintenanceMargin","margin","setMargin","setTimeout","loanTokenAmount","loanTokenSymbol","collateralTokenAmount","collateralTokenSymbol","ProgressBar","now","label","getUserLoans","loans","dfiProtocol","getMintPositions","loan","COLLATERAL_THRESHOLD","loanToken","collateralToken","principal","collateral","currentMargin","lt","sub","MintSection","positions","setPositions","noMinted","setNoMinted","hideSmall","setHideSmall","mintPositions","showPositions","item","xs","Check","checked","PriceCard","symbol","basePriceClass","priceClass","setPriceClass","transitionDirection","setTransitionDirection","previousPriceString","ref","useRef","current","usePrevious","symbolIcon","currentPrice","slice","previousPrice","priceDisplay","priceText","direction","addToken","preventDefault","params","options","decimals","image","bscScanHref","symbolDisplay","clsx","loadStocksPrice","getOracleStockPrice","oracleStockPrice","diff","getDiff","oraclePrice","stockAddress","priceFeeds","queryRate","stockPriceInDolly","precision","StockCard","sm","StockTable","prices","setPrices","isTradingHours","dateToday","openTime","tz","closeTime","isBetween","interval","setInterval","getTwinPrice","getDopplePrice","PriceTitle","Helmet","defer","App","setTwinPrice","dopplePrice","setDopplePrice","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","performance","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ee9d538.chunk.js","sourcesContent":["import { ethers } from \"ethers\";\nimport { DFI_PROTOCOLS_ABI, IPANCAKE_ROUTER02_ABI } from \"./ABI\";\n\nexport const provider = new ethers.providers.JsonRpcProvider(\n  \"https://bsc-dataseed1.binance.org\",\n  {\n    name: \"Binance Smart Chain\",\n    chainId: 56,\n  }\n);\n\nexport const ROUTERS = {\n  twindex: {\n    address: \"0x6B011d0d53b0Da6ace2a3F436Fd197A4E35f47EF\",\n    abi: IPANCAKE_ROUTER02_ABI,\n  },\n};\n\nexport const TOKENS: {\n  [key: string]: string;\n} = {\n  TSLA: \"0x17aCe02e5C8814BF2EE9eAAFF7902D52c15Fb0f4\",\n  GOOGL: \"0x9C169647471C1C6a72773CfFc50F6Ba285684803\",\n  AMZN: \"0x1085B90544ff5C421D528aAF79Cc65aFc920aC79\",\n  AAPL: \"0xC10b2Ce6A2BCfdFDC8100Ba1602C1689997299D3\",\n  DOLLY: \"0xfF54da7CAF3BC3D34664891fC8f3c9B6DeA6c7A5\",\n  DOP: \"0x844FA82f1E54824655470970F7004Dd90546bB28\",\n  TWIN: \"0x3806aae953a3a873D02595f76C7698a57d4C7A57\",\n};\n\nexport const PRICE_FEEDS = {\n  address: \"0xd4f061a6a276f8B0Ae83D210D838B45fCC7532B2\",\n  abi: [\n    \"function queryRate(address, address) external view returns (uint256 rate, uint256 precision)\",\n  ],\n};\n\nexport const DFI_PROTOCOLS = {\n  address: \"0x37f5a7D8bBB1cc0307985D00DE520fE30630790c\",\n  abi: DFI_PROTOCOLS_ABI,\n};\n","import { ethers } from \"ethers\";\nimport { provider, ROUTERS, TOKENS } from \"./EthersProvider\";\n\nexport const getTokenPriceWithDopPair = async (\n  tokenAddress: string,\n  dollyPrice: any\n) => {\n  const tokenPrice = await getPriceFromTwindexRouter(dollyPrice, [\n    tokenAddress,\n    TOKENS.DOP,\n    TOKENS.DOLLY,\n  ]);\n\n  return tokenPrice;\n};\n\nexport const getTokenPriceWithDollyPair = async (\n  tokenAddress: string,\n  dollyPrice: any\n) => {\n  const tokenPrice = await getPriceFromTwindexRouter(dollyPrice, [\n    tokenAddress,\n    TOKENS.DOLLY,\n  ]);\n\n  return tokenPrice;\n};\n\nexport const getPriceFromTwindexRouter = async (dollyPrice: any, path: any) => {\n  const twindexRouter = new ethers.Contract(\n    ROUTERS.twindex.address,\n    ROUTERS.twindex.abi,\n    provider\n  );\n\n  const result = await twindexRouter.functions.getAmountsOut(\n    ethers.utils.parseEther(\"1\"),\n    path\n  );\n  const amountOut = result.amounts[result.amounts.length - 1];\n\n  return amountOut.mul(dollyPrice).div(ethers.utils.parseEther(\"1\"));\n};\n\n/**\n * Get Dolly price in USD from the oracle\n * @returns dolly price (18 decimal precision)\n */\nexport const getOracleDollyPrice = async () => {\n  const oracle = new ethers.Contract(\n    \"0xa442c34d88f4091880AEEE16500B088306562caa\",\n    [\"function latestAnswer() external view returns (uint256 price)\"],\n    provider\n  );\n  const price = (await oracle.functions.latestAnswer())[\"price\"];\n  return price;\n};\n\nexport const formatUsd = (bigNumber: any) => {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(Number(ethers.utils.formatEther(bigNumber)));\n};\n\nexport const objectFlip = (obj: { [key: string]: string }) => {\n  const ret: { [key: string]: string } = {};\n  Object.keys(obj).forEach((key) => {\n    ret[obj[key]] = key;\n  });\n  return ret;\n};\n","import { ethers } from \"ethers\";\nimport { provider, TOKENS } from \"./EthersProvider\";\nimport {\n  formatUsd,\n  getOracleDollyPrice,\n  getTokenPriceWithDopPair,\n} from \"./Utils\";\n\nconst TWIN_ABI = [\n  \"function lockOf(address) external view returns (uint256 lockedAmount)\",\n];\n\nexport const getLockedTWINAmount = async (address: string) => {\n  const twin = new ethers.Contract(TOKENS.TWIN, TWIN_ABI, provider);\n  const lockedAmount = (await twin.functions.lockOf(address)).lockedAmount;\n\n  const amount = Number(ethers.utils.formatEther(lockedAmount)).toFixed(2);\n  const dollyPrice = await getOracleDollyPrice();\n  const twinPrice = await getTokenPriceWithDopPair(TOKENS.TWIN, dollyPrice);\n  const valueInUsd = lockedAmount\n    .mul(twinPrice)\n    .div(ethers.utils.parseEther(\"1\"));\n\n  return {\n    amount,\n    valueInUsd: formatUsd(valueInUsd),\n  };\n};\n\nconst getCurrentBlockNumber = async () => {\n  const blockNumber = await provider.getBlockNumber();\n  return blockNumber;\n};\n\nconst secondsUntilBlock = (\n  currentBlockNumber: number,\n  targetBlockNumber: number\n) => {\n  const BLOCK_TIME = 3 * 1000; // 3 second\n  const diff = currentBlockNumber - targetBlockNumber;\n\n  return -(diff * BLOCK_TIME);\n};\n\nexport const getUnlockDate = async () => {\n  const currentBlockNumber = await getCurrentBlockNumber();\n  const TWIN_UNLOCK_BLOCK_NUMBER = 8763010;\n\n  const secondsUntil = secondsUntilBlock(\n    currentBlockNumber,\n    TWIN_UNLOCK_BLOCK_NUMBER\n  );\n\n  return new Date().valueOf() + secondsUntil;\n};\n","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\ninterface Props {\n  icon?: string;\n  placement?: \"top\" | \"right\" | \"bottom\" | \"left\";\n  text: string;\n}\nconst IconTooltip = ({ icon, placement = \"top\", text }: Props) => {\n  return (\n    <OverlayTrigger\n      placement={placement}\n      overlay={<Tooltip id={`tooltip-${placement}`}>{text}</Tooltip>}\n    >\n      <i className={`fa fa-${icon}`} />\n    </OverlayTrigger>\n  );\n};\n\nexport default IconTooltip;\n","import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\ninterface IWalletProps {\n  /* null - address is pending / '' - no wallet connected */\n  address: string | null;\n  setAddress: (address: string) => void;\n  connectWallet: () => void;\n}\n\nconst WalletContext = createContext({} as IWalletProps);\n\nexport const WalletProvider = ({ children }: { children: ReactNode }) => {\n  const [address, setAddress] = useState<string | null>(null);\n\n  useEffect(() => {\n    const address = new URLSearchParams(window.location.search).get(\"address\");\n    if (address) setAddress(address);\n    else setAddress(\"\");\n  }, []);\n\n  const handleManualAddressProvide = useCallback((address: string) => {\n    window.location.href = `?address=${address}`;\n  }, []);\n\n  /**\n   * Request accounts from ethereum injected by the extension such as MetaMask\n   * Example: (MetaMask) in this case this method will trigger MetaMask to pop-up a confirmation dialog)\n   */\n  const handleWalletConnect = useCallback(async () => {\n    if (typeof (window as any).ethereum !== \"undefined\") {\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const account = accounts[0];\n      window.location.href = `?address=${account}`;\n    } else {\n      alert(\"MetaMask is not installed!\");\n    }\n  }, []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        address,\n        setAddress: handleManualAddressProvide,\n        connectWallet: handleWalletConnect,\n      }}\n    >\n      {children}\n    </WalletContext.Provider>\n  );\n};\n\nexport const useWallet = () => useContext(WalletContext);\n","import { useEffect, useState, useMemo } from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\nimport {\n  getLockedTWINAmount,\n  getUnlockDate,\n} from \"../../modules/ethers/LockedTwin\";\nimport ReactCountdown, { CountdownTimeDelta } from \"react-countdown\";\nimport IconTooltip from \"../common/IconTooltip\";\nimport { useWallet } from \"../../modules/contexts/WalletContext\";\nimport moment from \"moment\";\nimport TextTransition from \"react-text-transition\";\n\nconst UnitRender = ({ value, unit }: { value: string; unit: string }) => {\n  return (\n    <>\n      <TextTransition text={value} inline noOverflow />\n      &nbsp;\n      <small\n        style={{\n          fontWeight: 200,\n        }}\n      >\n        {unit}\n      </small>\n    </>\n  );\n};\n\nconst CountdownRenderer = ({\n  days,\n  hours,\n  minutes,\n  seconds,\n  completed,\n}: CountdownTimeDelta) => {\n  if (completed) return <span>Unlocked</span>;\n  return (\n    <span>\n      <UnitRender value={String(days)} unit=\"DAYS\" />\n      &nbsp; &nbsp;\n      <UnitRender value={String(hours).padStart(2, \"0\")} unit=\"HR\" />\n      &nbsp; &nbsp;\n      <UnitRender value={String(minutes).padStart(2, \"0\")} unit=\"MIN\" />\n      &nbsp; &nbsp;\n      <UnitRender value={String(seconds).padStart(2, \"0\")} unit=\"SEC\" />\n    </span>\n  );\n};\n\nconst CountdownPlaceholder = () => {\n  return (\n    <span>\n      <UnitRender value=\"-\" unit=\"DAYS\" />\n      &nbsp; &nbsp;\n      <UnitRender value=\"-\" unit=\"HR\" />\n      &nbsp; &nbsp;\n      <UnitRender value=\"-\" unit=\"MIN\" />\n      &nbsp; &nbsp;\n      <UnitRender value=\"-\" unit=\"SEC\" />\n    </span>\n  );\n};\n\nconst Countdown = () => {\n  const [locked, setLocked] = useState<{\n    amount: string;\n    valueInUsd: string;\n  }>({\n    amount: \"----\",\n    valueInUsd: \"$---\",\n  });\n  const [unlockDate, setUnlockDate] = useState(0);\n  const { address } = useWallet();\n\n  useEffect(() => {\n    (async () => {\n      if (address) setLocked(await getLockedTWINAmount(address));\n      setUnlockDate(await getUnlockDate());\n    })();\n  }, [address]);\n\n  const unlockDateString = useMemo(() => {\n    const format = \"ddd D MMM YY HH:mm:ss (G[M]TZ)\";\n    if (unlockDate === 0) return moment(1625090082000).format(format);\n    else return moment(unlockDate).format(format);\n  }, [unlockDate]);\n\n  return (\n    <Card className=\"h-100\">\n      <Card.Body>\n        <Row className=\"h-100 d-flex align-items-center\">\n          <Col md={12} lg={3} className=\"text-center\">\n            <h4 className=\"m-0\">\n              <TextTransition inline text={locked.amount} />\n            </h4>\n            <small className=\"text-muted\">\n              (<TextTransition inline text={locked.valueInUsd} />)\n            </small>\n            <br />\n            <small>TWIN Locked</small>\n          </Col>\n          <Col md={12} lg={9} className=\"text-center\">\n            <hr className=\"d-lg-none d-md-block\" />\n            <small className=\"d-block text-muted mb-1\">\n              Approximately {unlockDateString}\n            </small>\n            <h4 className=\"m-0\">\n              {unlockDate !== 0 ? (\n                <ReactCountdown\n                  date={unlockDate}\n                  renderer={CountdownRenderer}\n                />\n              ) : (\n                <CountdownPlaceholder />\n              )}\n            </h4>\n            <small className=\"text-muted\">\n              until rewards unlock{\" \"}\n              <IconTooltip\n                icon=\"info-circle\"\n                placement=\"bottom\"\n                text=\"The locked rewards will unlock approximately 30 days, and then be released linearly across one month within blocks 8763010->9627010\"\n              />\n            </small>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Countdown;\n","const Footer = () => {\n  return (\n    <div\n      className=\"w-100 text-muted py-3 d-flex justify-content-center align-items-center\"\n      style={{ backgroundColor: \"#1C232E\", minHeight: \"10vh\" }}\n    >\n      <span className=\"text-center\">\n        Originally Created by{\" \"}\n        <a href=\"https://github.com/ice5050/twindex-stats\">ice5050</a>\n        <span className=\"mx-3\">|</span>\n        Modified by <a href=\"https://github.com/phwt/twindex-stats\">phwt</a>\n        <small\n          className=\"d-block mt-2\"\n          style={{\n            lineHeight: \"1.25em\",\n            fontWeight: 300,\n          }}\n        >\n          TWINDEX Stats is not affiliated, associated, authorized, endorsed by,\n          or in any way officially connected with dopple.finance or twindex.com.\n          <br />\n          All product and company names are the registered trademarks of their\n          original owners.\n        </small>\n      </span>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState, useCallback, useEffect } from \"react\";\nimport {\n  Container,\n  Nav,\n  Navbar,\n  Form,\n  Button,\n  InputGroup,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { useWallet } from \"../../modules/contexts/WalletContext\";\n\nconst AddressForm = () => {\n  const { address, setAddress, connectWallet } = useWallet();\n  const [localAddress, setLocalAddress] = useState(\"\");\n\n  useEffect(() => {\n    if (address) setLocalAddress(address);\n  }, [address]);\n\n  const handleSearch = useCallback(() => {\n    setAddress(localAddress);\n  }, [localAddress]);\n\n  return (\n    <Form inline>\n      <InputGroup>\n        <Form.Control\n          placeholder=\"Wallet Address\"\n          name=\"address\"\n          value={localAddress}\n          onChange={(e) => {\n            setLocalAddress(e.target.value);\n          }}\n          aria-label=\"Wallet Address\"\n          size=\"sm\"\n        />\n        <InputGroup.Append>\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            type=\"button\"\n            name=\"search\"\n            onClick={handleSearch}\n          >\n            <i className=\"fa fa-search\" />\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n\n      <Button\n        variant=\"primary\"\n        size=\"sm\"\n        className=\"ml-2\"\n        type=\"button\"\n        onClick={connectWallet}\n      >\n        Connect to a wallet\n      </Button>\n    </Form>\n  );\n};\n\nconst Header = () => {\n  return (\n    <Container style={{ minHeight: \"6vh\" }}>\n      <Navbar variant=\"dark\" expand=\"lg\" className=\"px-0\">\n        <Navbar.Brand href=\"#\">\n          <img\n            src=\"image/ts-white.svg\"\n            height=\"30\"\n            className=\"d-inline-block align-top mr-1 p-1\"\n            alt=\"TWINDEX Stats\"\n          />\n          <b\n            style={{\n              letterSpacing: 4,\n              fontWeight: 600,\n            }}\n          >\n            TWINDEX\n          </b>{\" \"}\n          <span\n            style={{\n              fontWeight: 200,\n            }}\n          >\n            Stats\n          </span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={\n                <Tooltip id=\"tooltip-feedback\">\n                  What's went wrong?\n                  <br />\n                  What could be improved?\n                  <br />\n                  I'd love to hear from you!\n                </Tooltip>\n              }\n            >\n              <Nav.Link\n                href=\"https://forms.gle/GdrXFvgqvRMML3pr8\"\n                style={{ fontWeight: 200 }}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Feedback\n              </Nav.Link>\n            </OverlayTrigger>\n          </Nav>\n          <AddressForm />\n        </Navbar.Collapse>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default Header;\n","import {\n  formatUsd,\n  getOracleDollyPrice,\n  getTokenPriceWithDopPair,\n  getTokenPriceWithDollyPair,\n  objectFlip,\n} from \"./Utils\";\nimport { ethers } from \"ethers\";\nimport { FAIRLAUNCH_ABI, IUNISWAPV2_PAIR_ABI } from \"./ABI\";\nimport { provider, TOKENS } from \"./EthersProvider\";\n\nconst DOLLY_PAIRS = {\n  TSLA: \"0xbde3b88c4D5926d5236447D1b12a866f1a38B2B7\",\n  GOOGL: \"0xC38150a12D3C686f13D6e3A791d6301ed274B862\",\n  AMZN: \"0x15C53425bd0b9bfEd3d4cCf27F4c4f1f7bBC838B\",\n  AAPL: \"0xb91d34BCdF77E13f70AfF4d86129d13389dE0802\",\n};\n\nconst DOP_PAIRS = {\n  TSLA: \"0xb611aCe852f60F0ec039f851644a5bC5270AbF7b\",\n  GOOGL: \"0x7A00B2BB049176C9C74E5d7bF617F84dB4763aec\",\n  AMZN: \"0x4a1135768C6ce4b2a2F20DAc80DE661949161627\",\n  AAPL: \"0x2D4980c63962d4B9156a8974AEA7C7fd3121913A\",\n  TWIN: \"0x65A95C2BC5c12E8e30e24D322ff386249c29a072\",\n};\n\nconst TWINDEX_POOLS = {\n  TWIN_DOP: 0,\n  TSLA_DOP: 1,\n  DOP_AAPL: 2,\n  AMZN_DOP: 3,\n  TSLA_DOLLY: 4,\n  AMZN_DOLLY: 5,\n  AAPL_DOLLY: 6,\n  GOOGL_DOLLY: 7,\n  DOP_GOOGL: 8,\n};\n\nconst FAIRLAUNCH = {\n  address: \"0xe6bE78800f25fFaE4D1db7CA6d3485629bD200Ed\",\n  abi: FAIRLAUNCH_ABI,\n};\n\nexport interface LPPrice {\n  token0Symbol: string;\n  token1Symbol: string;\n  token0Amount: string;\n  token1Amount: string;\n  lpAmount: string;\n  lpValue: string;\n  unformattedLpValue: any;\n  pendingTwin: any;\n  unclaimedTwin: string;\n  unclaimedTwinValue: string;\n}\n\nconst getDollyLPs = async (address: string): Promise<LPPrice[]> => {\n  const LPs = await Promise.all(\n    Object.entries(DOLLY_PAIRS).map(async ([token, pairAddress]) => {\n      const dollyPrice = await getOracleDollyPrice();\n      const stockPrice = await getTokenPriceWithDollyPair(\n        TOKENS[token],\n        dollyPrice\n      );\n      const [totalStockReserve, totalDollyReserve] = await getReserves(\n        pairAddress\n      );\n      const totalSupply = await getTotalLpSupply(pairAddress);\n      const lpPrice = getLpPrice(\n        totalSupply,\n        stockPrice,\n        dollyPrice,\n        totalStockReserve,\n        totalDollyReserve\n      );\n      const lpAmount = await getLpAmount(pairAddress, address);\n      const lpValue = lpPrice.mul(lpAmount).div(ethers.utils.parseEther(\"1\"));\n      const [stockAmount, dollyAmount] = getUnderlyingAssetsOfLps(\n        totalSupply,\n        lpAmount,\n        totalStockReserve,\n        totalDollyReserve\n      );\n\n      const pendingTwin = await getPendingTwin(\n        getPoolIdFromPairAddress(pairAddress),\n        address\n      );\n      const twinPrice = await getTokenPriceWithDopPair(TOKENS.TWIN, dollyPrice);\n\n      const unclaimedTwinValue = pendingTwin\n        .mul(twinPrice)\n        .div(ethers.utils.parseEther(\"1\"));\n\n      if (lpAmount.gt(0)) {\n        return {\n          token0Symbol: token,\n          token1Symbol: \"DOLLY\",\n          token0Amount: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(stockAmount)).toFixed(4))\n          ),\n          token1Amount: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(dollyAmount)).toFixed(2))\n          ),\n          lpAmount: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(lpAmount)).toFixed(2))\n          ),\n          lpValue: formatUsd(lpValue),\n          unformattedLpValue: lpValue,\n          pendingTwin,\n          unclaimedTwin: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(pendingTwin)).toFixed(2))\n          ),\n          unclaimedTwinValue: formatUsd(unclaimedTwinValue),\n        };\n      } else {\n        return undefined;\n      }\n    })\n  );\n\n  return LPs.filter((pair) => pair !== undefined) as LPPrice[];\n};\n\n/**\n * @deprecated Twindex has deprecated DOP-Synthetic Assets LP\n * This method will be removed when the deprecated LPs has been completely removed from twindex.com\n */\nconst getDopLPs = async (address: string): Promise<LPPrice[]> => {\n  const LPs = await Promise.all(\n    Object.entries(DOP_PAIRS).map(async ([token, pairAddress]) => {\n      const dollyPrice = await getOracleDollyPrice();\n      const dopPrice = await getTokenPriceWithDollyPair(TOKENS.DOP, dollyPrice);\n      let tokenPrice;\n      if (token === \"TWIN\") {\n        tokenPrice = await getTokenPriceWithDopPair(TOKENS[token], dollyPrice);\n      } else {\n        tokenPrice = await getTokenPriceWithDollyPair(\n          TOKENS[token],\n          dollyPrice\n        );\n      }\n      const totalSupply = await getTotalLpSupply(pairAddress);\n      const [token0] = await getTokenAddressesFromPair(pairAddress);\n\n      let totalStockReserve, totalDopReserve, lpPrice;\n      if (TOKENS[token] === token0) {\n        [totalStockReserve, totalDopReserve] = await getReserves(pairAddress);\n        lpPrice = getLpPrice(\n          totalSupply,\n          tokenPrice,\n          dopPrice,\n          totalStockReserve,\n          totalDopReserve\n        );\n      } else {\n        [totalDopReserve, totalStockReserve] = await getReserves(pairAddress);\n        lpPrice = getLpPrice(\n          totalSupply,\n          dopPrice,\n          tokenPrice,\n          totalDopReserve,\n          totalStockReserve\n        );\n      }\n\n      const lpAmount = await getLpAmount(pairAddress, address);\n      const lpValue = lpPrice.mul(lpAmount).div(ethers.utils.parseEther(\"1\"));\n      const [stockAmount, dopAmount] = getUnderlyingAssetsOfLps(\n        totalSupply,\n        lpAmount,\n        totalStockReserve,\n        totalDopReserve\n      );\n\n      const pendingTwin = await getPendingTwin(\n        getPoolIdFromPairAddress(pairAddress),\n        address\n      );\n      const twinPrice = await getTokenPriceWithDopPair(TOKENS.TWIN, dollyPrice);\n\n      const unclaimedTwinValue = pendingTwin\n        .mul(twinPrice)\n        .div(ethers.utils.parseEther(\"1\"));\n\n      if (lpAmount.gt(0)) {\n        return {\n          token0Symbol: token,\n          token1Symbol: \"DOP\",\n          token0Amount: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(stockAmount)).toFixed(4))\n          ),\n          token1Amount: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(dopAmount)).toFixed(2))\n          ),\n          lpAmount: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(lpAmount)).toFixed(2))\n          ),\n          lpValue: formatUsd(lpValue),\n          unformattedLpValue: lpValue,\n          pendingTwin,\n          unclaimedTwin: new Intl.NumberFormat().format(\n            parseFloat(Number(ethers.utils.formatEther(pendingTwin)).toFixed(2))\n          ),\n          unclaimedTwinValue: formatUsd(unclaimedTwinValue),\n        };\n      } else {\n        return undefined;\n      }\n    })\n  );\n\n  return LPs.filter((pair) => pair !== undefined) as LPPrice[];\n};\n\nconst getTwinLP = async (address: string): Promise<LPPrice | undefined> => {\n  const fairLaunch = new ethers.Contract(\n    FAIRLAUNCH.address,\n    FAIRLAUNCH.abi,\n    provider\n  );\n  const dollyPrice = await getOracleDollyPrice();\n  const twinPrice = await getTokenPriceWithDopPair(TOKENS.TWIN, dollyPrice);\n\n  const twinAmount = (await fairLaunch.userInfo(9, address)).amount;\n  const lpValue = twinAmount.mul(twinPrice).div(ethers.utils.parseEther(\"1\"));\n\n  const pendingTwin = await getPendingTwin(\"9\", address);\n  const pendingTwinValue = pendingTwin\n    .mul(twinPrice)\n    .div(ethers.utils.parseEther(\"1\"));\n\n  if (twinAmount.gt(0)) {\n    return {\n      token0Symbol: \"TWIN\",\n      token1Symbol: \"\",\n      token0Amount: new Intl.NumberFormat().format(\n        parseFloat(Number(ethers.utils.formatEther(twinAmount)).toFixed(4))\n      ),\n      token1Amount: \"\",\n      lpAmount: new Intl.NumberFormat().format(\n        parseFloat(Number(ethers.utils.formatEther(twinAmount)).toFixed(2))\n      ),\n      lpValue: formatUsd(lpValue),\n      unformattedLpValue: lpValue,\n      pendingTwin,\n      unclaimedTwin: new Intl.NumberFormat().format(\n        parseFloat(Number(ethers.utils.formatEther(pendingTwin)).toFixed(2))\n      ),\n      unclaimedTwinValue: formatUsd(pendingTwinValue),\n    };\n  } else {\n    return undefined;\n  }\n};\n\nexport const getLPs = async (address: string) => {\n  const dollyLPs = await getDollyLPs(address);\n  const dopLPs = await getDopLPs(address);\n  const twinLP = await getTwinLP(address);\n\n  const combineLPs = [...dollyLPs, ...dopLPs];\n  if (twinLP) combineLPs.push(twinLP);\n\n  if (!combineLPs.length) {\n    return null;\n  }\n\n  const totalValue = combineLPs\n    .map((r) => r.unformattedLpValue)\n    .reduce((sum, value) => sum.add(value));\n  const totalPendingTwins = combineLPs\n    .map((r) => r.pendingTwin)\n    .reduce((sum, value) => sum.add(value));\n\n  const dollyPrice = await getOracleDollyPrice();\n  const twinPrice = await getTokenPriceWithDopPair(TOKENS.TWIN, dollyPrice);\n\n  const unclaimedTwinValue = totalPendingTwins\n    .mul(twinPrice)\n    .div(ethers.utils.parseEther(\"1\"));\n\n  return {\n    lps: combineLPs,\n    total: {\n      lpValue: formatUsd(totalValue),\n      unclaimedTwin: new Intl.NumberFormat().format(\n        parseFloat(\n          Number(ethers.utils.formatEther(totalPendingTwins)).toFixed(2)\n        )\n      ),\n      unclaimedTwinValue: formatUsd(unclaimedTwinValue),\n    },\n  };\n};\n\nconst getReserves = async (pairAddress: string) => {\n  const twindexPair = new ethers.Contract(\n    pairAddress,\n    IUNISWAPV2_PAIR_ABI,\n    provider\n  );\n  const reserves = await twindexPair.functions.getReserves();\n\n  return reserves;\n};\n\nconst getTotalLpSupply = async (pairAddress: string) => {\n  const twindexPair = new ethers.Contract(\n    pairAddress,\n    IUNISWAPV2_PAIR_ABI,\n    provider\n  );\n  const totalSupply = (await twindexPair.functions.totalSupply())[0];\n\n  return totalSupply;\n};\n\nconst getLpPrice = (\n  lpSupply: any,\n  token0Price: any,\n  token1Price: any,\n  reserve0: any,\n  reserve1: any\n) => {\n  const totalToken0Value = token0Price\n    .mul(reserve0)\n    .div(ethers.utils.parseEther(\"1\"));\n  const totalToken1Value = token1Price\n    .mul(reserve1)\n    .div(ethers.utils.parseEther(\"1\"));\n  const totalValue = totalToken0Value.add(totalToken1Value);\n\n  return totalValue.mul(ethers.utils.parseEther(\"1\")).div(lpSupply);\n};\n\nconst getPendingTwin = async (poolId: string, walletAddress: string) => {\n  if (!walletAddress) return ethers.utils.parseEther(\"0\");\n\n  const fairlaunch = new ethers.Contract(\n    FAIRLAUNCH.address,\n    FAIRLAUNCH.abi,\n    provider\n  );\n  const pendingTwin = await fairlaunch.pendingTwin(poolId, walletAddress);\n\n  return pendingTwin;\n};\n\nconst getLpAmount = async (pairAddress: string, walletAddress: string) => {\n  if (!walletAddress) return ethers.utils.parseEther(\"0\");\n\n  const twindexPair = new ethers.Contract(\n    pairAddress,\n    IUNISWAPV2_PAIR_ABI,\n    provider\n  );\n  const lpAmountInWallet = (\n    await twindexPair.functions.balanceOf(walletAddress)\n  )[0];\n\n  const fairlaunch = new ethers.Contract(\n    FAIRLAUNCH.address,\n    FAIRLAUNCH.abi,\n    provider\n  );\n  const userInfo = await fairlaunch.userInfo(\n    getPoolIdFromPairAddress(pairAddress),\n    walletAddress\n  );\n  const lpAmountInPool = userInfo.amount;\n\n  return lpAmountInWallet.add(lpAmountInPool);\n};\n\nconst getPoolIdFromPairAddress = (pairAddress: string) => {\n  let token = objectFlip(DOLLY_PAIRS)[pairAddress];\n  // @ts-ignore\n  if (token) return TWINDEX_POOLS[`${token}_DOLLY`];\n\n  token = objectFlip(DOP_PAIRS)[pairAddress];\n  if (token) {\n    // @ts-ignore\n    return TWINDEX_POOLS[`${token}_DOP`] ?? TWINDEX_POOLS[`DOP_${token}`];\n  }\n\n  return null;\n};\n\nconst getUnderlyingAssetsOfLps = (\n  totalLpSupply: any,\n  lpAmount: any,\n  totalReserve0: any,\n  totalReserve1: any\n) => {\n  return [\n    lpAmount.mul(totalReserve0).div(totalLpSupply),\n    lpAmount.mul(totalReserve1).div(totalLpSupply),\n  ];\n};\n\nconst getTokenAddressesFromPair = async (pairAddress: string) => {\n  const twindexPair = new ethers.Contract(\n    pairAddress,\n    IUNISWAPV2_PAIR_ABI,\n    provider\n  );\n  const token0 = (await twindexPair.functions.token0())[0];\n  const token1 = (await twindexPair.functions.token1())[0];\n\n  return [token0, token1];\n};\n","import React, { useMemo } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { LPPrice } from \"../../../modules/ethers/LiquidityPool\";\n\ninterface Props {\n  lp: LPPrice;\n}\n\nconst LPCard = ({ lp }: Props) => {\n  const poolImage = useMemo(() => {\n    return `/twindex-stats/image/pool/${lp.token1Symbol}-${lp.token0Symbol}.svg`;\n  }, [lp.token0Symbol, lp.token1Symbol]);\n\n  const poolName = useMemo(() => {\n    if (lp.token1Symbol === \"\") return `${lp.token0Symbol} LP`;\n    else return `${lp.token1Symbol}-${lp.token0Symbol} LP`;\n  }, [lp]);\n\n  return (\n    <Card\n      style={{\n        border: \"1px solid #374151\",\n        borderRadius: 20,\n      }}\n      className=\"mb-4 fade-list\"\n    >\n      <Card.Body>\n        <Row>\n          <Col md={12} lg={4}>\n            <div className=\"d-flex align-items-center justify-content-lg-start justify-content-center ml-0 ml-lg-4\">\n              <img src={poolImage} alt=\"\" />\n              <div\n                className=\"d-flex align-items-center align-items-lg-start flex-column ml-3\"\n                style={{\n                  fontWeight: 300,\n                }}\n              >\n                {poolName}\n                <br />\n                <small className=\"text-primary\">\n                  {lp.lpAmount}&nbsp;\n                  <span style={{ fontWeight: 200 }}>\n                    {lp.token1Symbol === \"\" ? lp.token0Symbol : \"LP\"}\n                  </span>\n                </small>\n              </div>\n            </div>\n            <hr className=\"d-lg-none d-block\" />\n          </Col>\n          <Col\n            md={12}\n            lg={3}\n            className=\"d-flex align-items-center justify-content-center flex-column\"\n          >\n            <span\n              className=\"d-lg-none d-block mb-2\"\n              style={{ fontWeight: 200 }}\n            >\n              Underlying Assets\n            </span>\n            <span>\n              {lp.token1Amount}{\" \"}\n              <small style={{ fontWeight: 200 }}>{lp.token1Symbol}</small>\n            </span>\n            <span>\n              {lp.token0Amount}{\" \"}\n              <small style={{ fontWeight: 200 }}>{lp.token0Symbol}</small>\n            </span>\n          </Col>\n          <Col md={12} lg={0} className=\"d-lg-none d-block\">\n            <hr />\n          </Col>\n          <Col\n            md={12}\n            lg={3}\n            className=\"d-flex align-items-center justify-content-center text-center\"\n          >\n            <div>\n              <span\n                className=\"d-lg-none d-block mb-2\"\n                style={{ fontWeight: 200 }}\n              >\n                Pending TWIN\n              </span>\n              <div>\n                {lp.unclaimedTwin}{\" \"}\n                <small style={{ fontWeight: 200 }}>TWIN</small>\n                <small className=\"text-muted d-block\">\n                  ({lp.unclaimedTwinValue})\n                </small>\n              </div>\n            </div>\n          </Col>\n          <Col md={12} lg={0} className=\"d-lg-none d-block\">\n            <hr />\n          </Col>\n          <Col\n            md={12}\n            lg={2}\n            className=\"d-flex align-items-center justify-content-center text-primary text-center\"\n          >\n            <div>\n              <span\n                className=\"d-lg-none d-block mb-2\"\n                style={{ fontWeight: 200 }}\n              >\n                Total Value\n              </span>\n              {lp.lpValue}\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LPCard;\n","import { Card, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\n\ninterface Props {\n  lp: {\n    unclaimedTwin: string;\n    unclaimedTwinValue: string;\n    lpValue: string;\n  };\n}\n\nconst LPTotalCard = ({ lp }: Props) => {\n  return (\n    <Card\n      style={{\n        backgroundColor: \"transparent\",\n        border: \"0\",\n        boxShadow: \"none\",\n      }}\n      className=\"fade-list\"\n    >\n      <Card.Body>\n        <Row>\n          <Col md={4}></Col>\n          <Col\n            md={3}\n            className=\"d-flex align-items-center justify-content-center\"\n          >\n            <h5>Total</h5>\n          </Col>\n          <Col\n            md={3}\n            className=\"d-flex align-items-center justify-content-center text-center\"\n          >\n            <div>\n              <div>\n                {lp.unclaimedTwin}{\" \"}\n                <small style={{ fontWeight: 200 }}>TWIN</small>\n                <small className=\"text-muted d-block\">\n                  ({lp.unclaimedTwinValue})\n                </small>\n              </div>\n            </div>\n          </Col>\n          <Col\n            md={2}\n            className=\"d-flex align-items-center justify-content-center text-primary\"\n          >\n            {lp.lpValue}\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LPTotalCard;\n","import { useEffect, useState } from \"react\";\nimport { Card, Row, Col, Spinner } from \"react-bootstrap\";\nimport { getLPs, LPPrice } from \"../../../modules/ethers/LiquidityPool\";\nimport LPCard from \"./LPCard\";\nimport LPTotalCard from \"./LPTotalCard\";\nimport { useWallet } from \"../../../modules/contexts/WalletContext\";\n\nconst LPSection = () => {\n  const [LPs, setLPs] = useState<LPPrice[]>([]);\n  const [totalLP, setTotalLP] = useState<any>({});\n  const [noStaked, setNoStaked] = useState(false);\n  const { address } = useWallet();\n\n  useEffect(() => {\n    (async () => {\n      if (address) {\n        const lps = await getLPs(address);\n        if (lps === null) {\n          setNoStaked(true);\n        } else {\n          setLPs(lps.lps);\n          setTotalLP(lps.total);\n        }\n      }\n    })();\n  }, [address]);\n\n  return (\n    <Card\n      className=\"p-4\"\n      style={{\n        background: \"#192230\",\n      }}\n    >\n      <Card.Body className=\"pt-0\">\n        <h4 className=\"mb-4 m-0\">LP Holdings</h4>\n\n        <Row className=\"mb-3 mx-1 d-none d-lg-flex\">\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={4}>\n            LP Tokens Name\n          </Col>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={3}>\n            Underlying Assets\n          </Col>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={3}>\n            Pending TWIN\n          </Col>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={2}>\n            Total Value\n          </Col>\n        </Row>\n\n        {address !== \"\" ? (\n          <>\n            {!LPs.length && !noStaked && (\n              <div className=\"text-center w-100 mt-5 mb-4\">\n                <Spinner animation=\"border\" />\n              </div>\n            )}\n\n            {noStaked ? (\n              <div className=\"text-center text-muted w-100 pt-5 my-5\">\n                No Staked Liquidity Pool Found\n              </div>\n            ) : (\n              <>\n                {LPs.map((lp, index) => {\n                  return <LPCard key={index} lp={lp} />;\n                })}\n\n                {!!LPs.length && <LPTotalCard lp={totalLP} />}\n              </>\n            )}\n          </>\n        ) : (\n          <div className=\"text-center text-muted w-100 mt-5 mb-4\">\n            No Wallet Connected\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default LPSection;\n","import { useEffect, useState } from \"react\";\nimport { Card, Row, Col, ProgressBar } from \"react-bootstrap\";\nimport { MintPosition } from \"../../../modules/ethers/Loan\";\n\ninterface Props {\n  position: MintPosition;\n}\n\nconst MintCard = ({ position }: Props) => {\n  const [maintenanceMargin, setMaintenanceMargin] = useState(0);\n  const [margin, setMargin] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setMaintenanceMargin(parseFloat(position.maintenanceMargin));\n      setMargin(parseFloat(position.margin));\n    }, 50);\n  }, [position.margin, position.maintenanceMargin]);\n\n  return (\n    <Card\n      style={{\n        border: \"1px solid #374151\",\n        borderRadius: 20,\n      }}\n      className=\"mb-2 fade-list\"\n    >\n      <Card.Body className=\"py-2\">\n        <Row>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={5}>\n            <div>\n              <span className=\"d-md-block d-lg-none\">Asset: </span>\n              {position.loanTokenAmount}{\" \"}\n              <small style={{ fontWeight: 200 }}>\n                {position.loanTokenSymbol}\n              </small>\n            </div>\n            <div>\n              <span className=\"d-md-block d-lg-none\">Collateral: </span>\n              {position.collateralTokenAmount}{\" \"}\n              <small style={{ fontWeight: 200 }}>\n                {position.collateralTokenSymbol}\n              </small>\n            </div>\n          </Col>\n          <Col\n            className=\"text-center d-flex align-items-center mt-2\"\n            style={{ fontWeight: 300 }}\n            md={7}\n          >\n            <div className=\"w-100\">\n              <ProgressBar\n                style={{\n                  borderRadius: 30,\n                }}\n              >\n                <ProgressBar variant=\"danger\" now={maintenanceMargin} />\n                <ProgressBar now={margin} label={`${position.margin}%`} />\n              </ProgressBar>\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MintCard;\n","import { ethers } from \"ethers\";\nimport { DFI_PROTOCOLS, provider, TOKENS } from \"./EthersProvider\";\nimport { objectFlip } from \"./Utils\";\n\nconst getUserLoans = async (address: string) => {\n  let loans = [];\n  try {\n    const dfiProtocol = new ethers.Contract(\n      DFI_PROTOCOLS.address,\n      DFI_PROTOCOLS.abi,\n      provider\n    );\n    loans = (\n      await dfiProtocol.functions.getUserLoans(\n        address,\n        0,\n        1000,\n        0,\n        false,\n        false\n      )\n    )[0];\n  } catch (_) {}\n\n  return loans;\n};\n\nexport interface MintPosition {\n  collateralTokenAmount: string;\n  collateralTokenSymbol: string;\n  loanTokenAmount: string;\n  loanTokenSymbol: string;\n  maintenanceMargin: string;\n  margin: string;\n}\n\nexport const getMintPositions = async (\n  address: string\n): Promise<MintPosition[] | null> => {\n  const loans = await getUserLoans(address);\n\n  if (!loans.length) {\n    return null;\n  }\n\n  return loans\n    .map((loan: any) => {\n      const COLLATERAL_THRESHOLD = ethers.utils.parseEther(\"0.01\");\n      const {\n        loanToken,\n        collateralToken,\n        principal,\n        collateral,\n        maintenanceMargin,\n        currentMargin,\n      } = loan;\n\n      if (collateral.lt(COLLATERAL_THRESHOLD)) return undefined;\n\n      const loanTokenSymbol = objectFlip(TOKENS)[loanToken];\n      const collateralTokenSymbol = objectFlip(TOKENS)[collateralToken];\n\n      let margin = currentMargin.sub(maintenanceMargin);\n      if (margin.lt(0)) {\n        margin = ethers.utils.parseEther(\"0\");\n      }\n\n      return {\n        loanTokenSymbol,\n        loanTokenAmount: Number(ethers.utils.formatEther(principal)).toFixed(5),\n        collateralTokenSymbol,\n        collateralTokenAmount: Number(\n          ethers.utils.formatEther(collateral)\n        ).toFixed(2),\n        maintenanceMargin: Number(\n          ethers.utils.formatEther(maintenanceMargin)\n        ).toFixed(2),\n        margin: Number(ethers.utils.formatEther(margin)).toFixed(2),\n      };\n    })\n    .filter((position: any) => position !== undefined);\n};\n","import { useEffect, useState, useMemo } from \"react\";\nimport { Card, Row, Col, Spinner, Form } from \"react-bootstrap\";\nimport MintCard from \"./MintCard\";\nimport { getMintPositions, MintPosition } from \"../../../modules/ethers/Loan\";\nimport IconTooltip from \"../../common/IconTooltip\";\nimport { useWallet } from \"../../../modules/contexts/WalletContext\";\n\nconst MintSection = () => {\n  const [positions, setPositions] = useState<MintPosition[]>([]);\n  const [noMinted, setNoMinted] = useState(false);\n  const [hideSmall, setHideSmall] = useState(false);\n  const { address } = useWallet();\n\n  useEffect(() => {\n    (async () => {\n      if (address) {\n        const mintPositions = await getMintPositions(address);\n        if (mintPositions === null) {\n          setNoMinted(true);\n        } else {\n          setPositions(mintPositions);\n        }\n      }\n    })();\n  }, [address]);\n\n  const showPositions = useMemo(() => {\n    return positions.filter((item) => {\n      if (hideSmall) {\n        return parseFloat(item.loanTokenAmount) > 0.0001;\n      } else {\n        return true;\n      }\n    });\n  }, [positions, hideSmall]);\n\n  return (\n    <Card\n      className=\"p-4\"\n      style={{\n        background: \"#192230\",\n      }}\n    >\n      <Card.Body className=\"pt-0\">\n        <Row className=\"mb-4\">\n          <Col xs={12} lg={6}>\n            <h4 className=\"m-0\">\n              Mint Positions\n              <small className=\"d-inline d-lg-none\">\n                &nbsp;\n                <IconTooltip\n                  icon=\"info-circle\"\n                  text=\"Your position could be liquidated if the health reaches 0%\"\n                />\n              </small>\n            </h4>\n          </Col>\n          <Col className=\"text-left text-lg-right pt-1\" xs={12} lg={6}>\n            <Form.Check\n              label=\"Hide Small Assets\"\n              checked={hideSmall}\n              onChange={({ target: { checked } }) => {\n                setHideSmall(checked);\n              }}\n            />\n          </Col>\n        </Row>\n\n        <Row className=\"mb-3 mx-1 d-none d-lg-flex\">\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={5}>\n            Asset <br />\n            Collateral\n          </Col>\n          <Col\n            className=\"d-flex align-items-center justify-content-center\"\n            style={{ fontWeight: 300 }}\n            md={7}\n          >\n            Health&nbsp;\n            <IconTooltip\n              icon=\"info-circle\"\n              text=\"Your position could be liquidated if the health reaches 0%\"\n            />\n          </Col>\n        </Row>\n\n        {address !== \"\" ? (\n          <>\n            {!positions.length && !noMinted && (\n              <div className=\"text-center w-100 mt-5 mb-4\">\n                <Spinner animation=\"border\" />\n              </div>\n            )}\n\n            {(noMinted || (hideSmall && showPositions.length === 0)) && (\n              <div className=\"text-center text-muted w-100 mt-5 mb-4\">\n                No Minted Positions Found\n              </div>\n            )}\n\n            {showPositions.map((position, index) => {\n              return (\n                <MintCard\n                  key={`${position.collateralTokenSymbol}-${position.loanTokenSymbol}-${index}`}\n                  position={position}\n                />\n              );\n            })}\n          </>\n        ) : (\n          <div className=\"text-center text-muted w-100 mt-5 mb-4\">\n            No Wallet Connected\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MintSection;\n","import clsx from \"clsx\";\nimport React, {\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  useRef,\n} from \"react\";\nimport { Card, Row, Col, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport TextTransition from \"react-text-transition\";\nimport IconTooltip from \"../common/IconTooltip\";\n\n/**\n * useEffect with previous value\n * https://stackoverflow.com/a/57706747/7405706\n *  */\nconst usePrevious = <T extends unknown>(value: T): T | undefined => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\ninterface Props {\n  symbol: string;\n  address: string;\n  price: string;\n}\n\nconst PriceCard = ({ symbol, address, price }: Props) => {\n  const basePriceClass = \"m-0 transition-5\";\n  const [priceClass, setPriceClass] = useState(\"\");\n  const [transitionDirection, setTransitionDirection] =\n    useState<\"up\" | \"down\">(\"up\");\n  const previousPriceString = usePrevious(price);\n  const symbolIcon = useMemo(() => {\n    switch (symbol) {\n      case \"TWIN\":\n        return \"/twindex-stats/image/twin.svg\";\n      case \"DOP\":\n        return \"/twindex-stats/image/dop.svg\";\n    }\n  }, [symbol]);\n\n  useEffect(() => {\n    if (previousPriceString !== undefined && price !== \"\") {\n      const currentPrice = parseFloat(price.slice(1, price.length));\n      const previousPrice = parseFloat(\n        previousPriceString.slice(1, previousPriceString.length)\n      );\n      if (currentPrice < previousPrice) {\n        setPriceClass(\"text-danger\");\n        setTransitionDirection(\"down\");\n        setTimeout(() => {\n          setPriceClass(\"\");\n        }, 500);\n      } else if (currentPrice > previousPrice) {\n        setPriceClass(\"text-success\");\n        setTransitionDirection(\"up\");\n        setTimeout(() => {\n          setPriceClass(\"\");\n        }, 500);\n      }\n    }\n  }, [price]);\n\n  const priceDisplay = useMemo(() => {\n    const priceText = price === \"\" ? \"$---\" : price;\n    return (\n      <TextTransition inline text={priceText} direction={transitionDirection} />\n    );\n  }, [price, transitionDirection]);\n\n  const addToken = useCallback(\n    async (e) => {\n      e.preventDefault();\n\n      const wasAdded = await ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\",\n          options: {\n            address,\n            symbol,\n            decimals: 18,\n            image: \"https://phwt.github.io\" + symbolIcon, // TODO: Get deployment path from package.js\n          },\n        },\n      });\n\n      if (!wasAdded) alert(\"Add Token Error!\");\n    },\n    [address, symbolIcon, symbol]\n  );\n\n  const bscScanHref = useMemo(() => {\n    return `https://bscscan.com/token/${address}`;\n  }, [address]);\n\n  const symbolDisplay = (\n    <>\n      <OverlayTrigger\n        placement=\"top\"\n        overlay={\n          <Tooltip id={`tooltip-${symbol}`}>View {symbol} on BscScan </Tooltip>\n        }\n      >\n        <a href={bscScanHref} target=\"_blank\" rel=\"noreferrer\">\n          <>{symbol}</>\n        </a>\n      </OverlayTrigger>\n      <a href=\"#\" className=\"ml-2\" onClick={addToken}>\n        <IconTooltip icon=\"plus-circle\" text={`Add ${symbol} to MetaMask`} />\n      </a>\n    </>\n  );\n\n  return (\n    <Card className=\"h-100\">\n      <Card.Body className=\"d-flex align-items-center justify-content-center\">\n        <Row>\n          <Col\n            md=\"12\"\n            lg=\"5\"\n            className=\"text-center d-flex align-items-center justify-content-center\"\n          >\n            <img\n              src={symbolIcon}\n              alt=\"Token Icon\"\n              className=\"img-fluid\"\n              style={{\n                height: \"3em\",\n              }}\n            />\n          </Col>\n          <Col md=\"12\" lg=\"7\">\n            <div className=\"d-none d-lg-flex align-items-center\">\n              <div>\n                <h6\n                  className=\"m-0\"\n                  style={{\n                    fontWeight: 300,\n                  }}\n                >\n                  {symbolDisplay}\n                </h6>\n                <h2 className={clsx(basePriceClass, priceClass)}>\n                  {priceDisplay}\n                </h2>\n              </div>\n            </div>\n\n            <div className=\"d-lg-none d-md-flex align-items-center justify-content-center text-center\">\n              <div>\n                <h6\n                  className=\"m-0 mt-3\"\n                  style={{\n                    fontWeight: 300,\n                  }}\n                >\n                  {symbolDisplay}\n                </h6>\n                <h2 className={clsx(basePriceClass, priceClass)}>\n                  {priceDisplay}\n                </h2>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PriceCard;\n","import { ethers } from \"ethers\";\nimport { PRICE_FEEDS, provider, TOKENS } from \"./EthersProvider\";\nimport {\n  formatUsd,\n  getOracleDollyPrice,\n  getTokenPriceWithDollyPair,\n} from \"./Utils\";\n\nexport interface StockPrice {\n  token: string;\n  stockPrice: string;\n  oraclePrice: string;\n  diff: string;\n}\n\nexport const loadStocksPrice = async (): Promise<StockPrice[]> => {\n  return await Promise.all(\n    Object.entries(TOKENS)\n      .filter(([token, address]) => {\n        return token !== \"DOLLY\" && token !== \"DOP\" && token !== \"TWIN\";\n      })\n      .map(async ([token, address]) => {\n        const dollyPrice = await getOracleDollyPrice();\n        const stockPrice = await getTokenPriceWithDollyPair(\n          address,\n          dollyPrice\n        );\n        const oracleStockPrice = await getOracleStockPrice(address, dollyPrice);\n        const diff = getDiff(stockPrice, oracleStockPrice);\n\n        return {\n          token,\n          stockPrice: formatUsd(stockPrice),\n          oraclePrice: formatUsd(oracleStockPrice),\n          diff: Number(ethers.utils.formatEther(diff)).toFixed(2) + \"%\",\n        };\n      })\n  );\n};\n\n/**\n *\n * @param {string} stockAddress Address of a Dopple synthetic stock\n * @param {BigNumber} dollyPrice dolly price (18 decimal precision) (get from getOracleDollyPrice)\n */\nconst getOracleStockPrice = async (stockAddress: string, dollyPrice: any) => {\n  const priceFeeds = new ethers.Contract(\n    PRICE_FEEDS.address,\n    PRICE_FEEDS.abi,\n    provider\n  );\n\n  const [stockPriceInDolly, precision] = await priceFeeds.functions.queryRate(\n    stockAddress,\n    TOKENS.DOLLY\n  );\n\n  return stockPriceInDolly.mul(dollyPrice).div(precision);\n};\n\nconst getDiff = (price: any, oraclePrice: any) => {\n  const priceDiff = price.sub(oraclePrice);\n\n  return priceDiff.mul(ethers.utils.parseEther(\"100\")).div(oraclePrice);\n};\n","import { Card, Row, Col } from \"react-bootstrap\";\nimport { StockPrice } from \"../../../modules/ethers/Stock\";\n\ninterface Props {\n  price: StockPrice;\n}\n\nconst StockCard = ({ price }: Props) => {\n  // const priceDiff = useMemo(() => {\n  //   return Math.floor(((price.twindex - price.oracle) / price.oracle) * 100)\n  // }, [price.twindex, price.oracle])\n\n  return (\n    <Card\n      style={{\n        border: \"1px solid #374151\",\n        borderRadius: 20,\n      }}\n      className=\"mb-2 fade-list\"\n    >\n      <Card.Body className=\"py-2\">\n        <span className=\"d-none d-lg-block\">\n          <Row>\n            <Col className=\"text-center\" style={{ fontWeight: 300 }} lg={3}>\n              <span className=\"text-primary\">{price.token}</span>\n            </Col>\n            <Col className=\"text-center\" style={{ fontWeight: 300 }} lg={3}>\n              {price.stockPrice}\n            </Col>\n            <Col className=\"text-center\" style={{ fontWeight: 300 }} lg={3}>\n              {price.oraclePrice}\n            </Col>\n            <Col className=\"text-center\" style={{ fontWeight: 300 }} lg={3}>\n              {price.diff}\n            </Col>\n          </Row>\n        </span>\n        <span className=\"d-md-block d-lg-none\">\n          <Row>\n            <Col\n              sm={5}\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <h3 className=\"text-primary m-0\">{price.token}</h3>\n            </Col>\n            <Col\n              sm={7}\n              className=\"d-flex align-items-center justify-content-center\"\n            >\n              <Row>\n                <Col xs={6} className=\"text-right\">\n                  Twindex\n                </Col>\n                <Col xs={6} style={{ fontWeight: 200 }}>\n                  {price.stockPrice}\n                </Col>\n                <Col xs={6} className=\"text-right\">\n                  Oracle\n                </Col>\n                <Col xs={6} style={{ fontWeight: 200 }}>\n                  {price.oraclePrice}\n                </Col>\n                <Col xs={6} className=\"text-right\">\n                  Difference\n                </Col>\n                <Col xs={6} style={{ fontWeight: 200 }}>\n                  {price.diff}\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </span>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StockCard;\n","import moment from \"moment-timezone\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Card, Row, Col, Spinner } from \"react-bootstrap\";\nimport { loadStocksPrice, StockPrice } from \"../../../modules/ethers/Stock\";\nimport StockCard from \"./StockCard\";\n\nconst StockTable = () => {\n  const [prices, setPrices] = useState<StockPrice[]>([]);\n\n  const isTradingHours = useMemo(() => {\n    const dateToday = moment().format(\"YYYY-MM-DD\");\n    const openTime = moment.tz(`${dateToday} 09:30`, \"America/New_York\");\n    const closeTime = moment.tz(`${dateToday} 16:00`, \"America/New_York\");\n    return moment().isBetween(openTime, closeTime);\n  }, []);\n\n  useEffect(() => {\n    // Faster refresh rate on trading hours\n    const interval = isTradingHours ? 5000 : 30000;\n    (async () => {\n      setPrices(await loadStocksPrice());\n      setInterval(async () => {\n        setPrices(await loadStocksPrice());\n      }, interval);\n    })();\n  }, [isTradingHours]);\n\n  return (\n    <Card\n      className=\"p-4\"\n      style={{\n        background: \"#192230\",\n      }}\n    >\n      <Card.Body className=\"pt-0\">\n        <h4 className=\"mb-4 m-0\">Stock Price</h4>\n\n        <Row className=\"mb-3 mx-1 d-none d-lg-flex\">\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={3}>\n            Symbol\n          </Col>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={3}>\n            Twindex\n          </Col>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={3}>\n            Oracle\n          </Col>\n          <Col className=\"text-center\" style={{ fontWeight: 300 }} md={3}>\n            Difference\n          </Col>\n        </Row>\n\n        {!prices.length ? (\n          <div className=\"text-center w-100 mt-5 mb-4\">\n            <Spinner animation=\"border\" />\n          </div>\n        ) : (\n          <>\n            {prices.map((price) => {\n              return <StockCard key={price.token} price={price} />;\n            })}\n          </>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StockTable;\n","import { TOKENS } from \"./EthersProvider\";\nimport {\n  getTokenPriceWithDopPair,\n  getOracleDollyPrice,\n  getTokenPriceWithDollyPair,\n  formatUsd,\n} from \"./Utils\";\n\nexport const getTwinPrice = async () => {\n  return formatUsd(\n    await getTokenPriceWithDopPair(TOKENS.TWIN, await getOracleDollyPrice())\n  );\n};\n\nexport const getDopplePrice = async () => {\n  return formatUsd(\n    await getTokenPriceWithDollyPair(TOKENS.DOP, await getOracleDollyPrice())\n  );\n};\n","import { Helmet } from \"react-helmet\";\n\ninterface Props {\n  twinPrice: string;\n  dopPrice: string;\n}\n\nconst PriceTitle = ({ twinPrice, dopPrice }: Props) => {\n  return (\n    <Helmet defer={false}>\n      {twinPrice === \"\" || dopPrice === \"\" ? (\n        <title>TWINDEX Stats</title>\n      ) : (\n        <title>\n          {twinPrice} TWIN | {dopPrice} DOP - TWINDEX Stats\n        </title>\n      )}\n    </Helmet>\n  );\n};\n\nexport default PriceTitle;\n","import { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Countdown from \"./components/display/Countdown\";\nimport Footer from \"./components/layout/Footer\";\nimport Header from \"./components/layout/Header\";\nimport LPTable from \"./components/display/lp/LPSection\";\nimport MintSection from \"./components/display/mint/MintSection\";\nimport PriceCard from \"./components/display/PriceCard\";\nimport StockTable from \"./components/display/stock/StockSection\";\nimport { getDopplePrice, getTwinPrice } from \"./modules/ethers/GovernanceToken\";\nimport PriceTitle from \"./components/common/PriceTitle\";\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/performance\";\n\nconst initializeFirebase = () => {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n    appId: process.env.REACT_APP_FIREBASE_APPID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID,\n  });\n  firebase.analytics();\n  firebase.performance();\n};\n\nconst App = () => {\n  const [twinPrice, setTwinPrice] = useState(\"\");\n  const [dopplePrice, setDopplePrice] = useState(\"\");\n\n  useEffect(() => {\n    initializeFirebase();\n    (async () => {\n      setTwinPrice(await getTwinPrice());\n      setDopplePrice(await getDopplePrice());\n      setInterval(async () => {\n        setTwinPrice(await getTwinPrice());\n        setDopplePrice(await getDopplePrice());\n      }, 5000);\n    })();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <PriceTitle twinPrice={twinPrice} dopPrice={dopplePrice} />\n      <Container\n        className=\"pb-4\"\n        style={{ minHeight: \"calc(100vh - 10vh - 6vh)\" }}\n      >\n        <Row>\n          {/* TODO: Stop hardcoding token data */}\n          <Col md=\"6\" lg=\"3\">\n            <PriceCard\n              symbol=\"TWIN\"\n              price={twinPrice}\n              address=\"0x3806aae953a3a873D02595f76C7698a57d4C7A57\"\n            />\n          </Col>\n          <Col md=\"6\" lg=\"3\" className=\"mt-4 mt-md-0\">\n            <PriceCard\n              symbol=\"DOP\"\n              price={dopplePrice}\n              address=\"0x844fa82f1e54824655470970f7004dd90546bb28\"\n            />\n          </Col>\n          <Col md=\"12\" lg=\"6\" className=\"mt-4 mt-lg-0\">\n            <Countdown />\n          </Col>\n          <Col lg=\"12\" className=\"mt-4\">\n            <LPTable />\n          </Col>\n          <Col md=\"12\" lg=\"6\" className=\"mt-4\">\n            <MintSection />\n          </Col>\n          <Col md=\"12\" lg=\"6\" className=\"mt-4\">\n            <StockTable />\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { WalletProvider } from \"./modules/contexts/WalletContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <WalletProvider>\n      <App />\n    </WalletProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}